// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.worker.controlcommands

object ControlcommandsProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto,
    edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto,
    com.google.protobuf.timestamp.TimestampProto,
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.StartWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PauseWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ResumeWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.SchedulerTimeSlotEventV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.OpenOperatorV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.UpdateInputLinkingV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AddPartitioningV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerExecutionCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryStatisticsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryCurrentInputTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LocalOperatorExceptionV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LinkOrdinal,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.InitializeOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ModifyOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ReplayCurrentTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PythonConsoleMessageV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.EvaluateExpressionV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerDebugCommandV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.StateRequestV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QuerySelfWorkloadMetricsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LinkCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ControlCommandV2Message
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CkJlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0ZWN0dXJlL3dvcmtlci9jb250cm9sY29tbWFuZHMucHJvdG8SLGVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyGkdlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0Z
  WN0dXJlL3NlbmRzZW1hbnRpY3MvcGFydGl0aW9uaW5ncy5wcm90bxo1ZWR1L3VjaS9pY3MvYW1iZXIvZW5naW5lL2NvbW1vbi92a
  XJ0dWFsaWRlbnRpdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aFXNjYWxhcGIvc2NhbGFwYi5wcm90b
  yIPCg1TdGFydFdvcmtlclYyIg8KDVBhdXNlV29ya2VyVjIiEAoOUmVzdW1lV29ya2VyVjIiXAoYU2NoZWR1bGVyVGltZVNsb3RFd
  mVudFYyEkAKEXRpbWVfc2xvdF9leHBpcmVkGAEgASgIQhTiPxESD3RpbWVTbG90RXhwaXJlZFIPdGltZVNsb3RFeHBpcmVkIhAKD
  k9wZW5PcGVyYXRvclYyIuIBChRVcGRhdGVJbnB1dExpbmtpbmdWMhJpCgppZGVudGlmaWVyGAEgASgLMjUuZWR1LnVjaS5pY3MuY
  W1iZXIuZW5naW5lLmNvbW1vbi5BY3RvclZpcnR1YWxJZGVudGl0eUIS4j8PEgppZGVudGlmaWVy8AEBUgppZGVudGlmaWVyEl8KC
  mlucHV0X2xpbmsYAiABKAsyLS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLkxpbmtJZGVudGl0eUIR4j8OEglpbnB1d
  ExpbmvwAQFSCWlucHV0TGluayLeAQoRQWRkUGFydGl0aW9uaW5nVjISTAoDdGFnGAEgASgLMi0uZWR1LnVjaS5pY3MuYW1iZXIuZ
  W5naW5lLmNvbW1vbi5MaW5rSWRlbnRpdHlCC+I/CBIDdGFn8AEBUgN0YWcSewoMcGFydGl0aW9uaW5nGAIgASgLMkEuZWR1LnVja
  S5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5zZW5kc2VtYW50aWNzLlBhcnRpdGlvbmluZ0IU4j8REgxwYXJ0aXRpb25pb
  mfwAQFSDHBhcnRpdGlvbmluZyIcChpXb3JrZXJFeGVjdXRpb25Db21wbGV0ZWRWMiITChFRdWVyeVN0YXRpc3RpY3NWMiIaChhRd
  WVyeUN1cnJlbnRJbnB1dFR1cGxlVjIiQgoYTG9jYWxPcGVyYXRvckV4Y2VwdGlvblYyEiYKB21lc3NhZ2UYASABKAlCDOI/CRIHb
  WVzc2FnZVIHbWVzc2FnZSKaAQoLTGlua09yZGluYWwSVgoHbGlua19pZBgBIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5jb21tb24uTGlua0lkZW50aXR5Qg7iPwsSBmxpbmtJZPABAVIGbGlua0lkEjMKDHBvcnRfb3JkaW5hbBgCIAEoA0IQ4j8NEgtwb
  3J0T3JkaW5hbFILcG9ydE9yZGluYWwitAUKGUluaXRpYWxpemVPcGVyYXRvckxvZ2ljVjISHQoEY29kZRgBIAEoCUIJ4j8GEgRjb
  2RlUgRjb2RlEkoKAmlkGAIgASgLMi4uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5MYXllcklkZW50aXR5QgriPwcSA
  mlk8AEBUgJpZBKHAQoVaW5wdXRfb3JkaW5hbF9tYXBwaW5nGAMgAygLMjkuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpd
  GVjdHVyZS53b3JrZXIuTGlua09yZGluYWxCGOI/FRITaW5wdXRPcmRpbmFsTWFwcGluZ1ITaW5wdXRPcmRpbmFsTWFwcGluZxKKA
  QoWb3V0cHV0X29yZGluYWxfbWFwcGluZxgEIAMoCzI5LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya
  2VyLkxpbmtPcmRpbmFsQhniPxYSFG91dHB1dE9yZGluYWxNYXBwaW5nUhRvdXRwdXRPcmRpbmFsTWFwcGluZxIqCglpc19zb3VyY
  2UYBSABKAhCDeI/ChIIaXNTb3VyY2VSCGlzU291cmNlEpEBCg1vdXRwdXRfc2NoZW1hGAYgAygLMlkuZWR1LnVjaS5pY3MuYW1iZ
  XIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuSW5pdGlhbGl6ZU9wZXJhdG9yTG9naWNWMi5PdXRwdXRTY2hlbWFFbnRyeUIR4
  j8OEgxvdXRwdXRTY2hlbWFSDG91dHB1dFNjaGVtYRpVChFPdXRwdXRTY2hlbWFFbnRyeRIaCgNrZXkYASABKAlCCOI/BRIDa2V5U
  gNrZXkSIAoFdmFsdWUYAiABKAlCCuI/BxIFdmFsdWVSBXZhbHVlOgI4ASJiChVNb2RpZnlPcGVyYXRvckxvZ2ljVjISHQoEY29kZ
  RgBIAEoCUIJ4j8GEgRjb2RlUgRjb2RlEioKCWlzX3NvdXJjZRgCIAEoCEIN4j8KEghpc1NvdXJjZVIIaXNTb3VyY2UiFgoUUmVwb
  GF5Q3VycmVudFR1cGxlVjIi2wEKFlB5dGhvbkNvbnNvbGVNZXNzYWdlVjISSwoJdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb
  3RvYnVmLlRpbWVzdGFtcEIR4j8OEgl0aW1lc3RhbXDwAQFSCXRpbWVzdGFtcBInCghtc2dfdHlwZRgCIAEoCUIM4j8JEgdtc2dUe
  XBlUgdtc2dUeXBlEiMKBnNvdXJjZRgDIAEoCUIL4j8IEgZzb3VyY2VSBnNvdXJjZRImCgdtZXNzYWdlGAQgASgJQgziPwkSB21lc
  3NhZ2VSB21lc3NhZ2UiRwoURXZhbHVhdGVFeHByZXNzaW9uVjISLwoKZXhwcmVzc2lvbhgBIAEoCUIP4j8MEgpleHByZXNzaW9uU
  gpleHByZXNzaW9uIjIKFFdvcmtlckRlYnVnQ29tbWFuZFYyEhoKA2NtZBgBIAEoCUII4j8FEgNjbWRSA2NtZCKOAQoOU3RhdGVSZ
  XF1ZXN0VjISJwoIdHVwbGVfaWQYASABKAlCDOI/CRIHdHVwbGVJZFIHdHVwbGVJZBIkCgdsaW5lX25vGAIgASgFQgviPwgSBmxpb
  mVOb1IGbGluZU5vEi0KCnN0YXRlX25hbWUYAyABKAlCDuI/CxIJc3RhdGVOYW1lUglzdGF0ZU5hbWUiHAoaUXVlcnlTZWxmV29ya
  2xvYWRNZXRyaWNzVjIiaQoPTGlua0NvbXBsZXRlZFYyElYKB2xpbmtfaWQYASABKAsyLS5lZHUudWNpLmljcy5hbWJlci5lbmdpb
  mUuY29tbW9uLkxpbmtJZGVudGl0eUIO4j8LEgZsaW5rSWTwAQFSBmxpbmtJZCLSFgoQQ29udHJvbENvbW1hbmRWMhJyCgxzdGFyd
  F93b3JrZXIYASABKAsyOy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5TdGFydFdvcmtlclYyQ
  hDiPw0SC3N0YXJ0V29ya2VySABSC3N0YXJ0V29ya2VyEnIKDHBhdXNlX3dvcmtlchgCIAEoCzI7LmVkdS51Y2kuaWNzLmFtYmVyL
  mVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlBhdXNlV29ya2VyVjJCEOI/DRILcGF1c2VXb3JrZXJIAFILcGF1c2VXb3JrZXISd
  goNcmVzdW1lX3dvcmtlchgDIAEoCzI8LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlJlc3VtZ
  VdvcmtlclYyQhHiPw4SDHJlc3VtZVdvcmtlckgAUgxyZXN1bWVXb3JrZXISggEKEGFkZF9wYXJ0aXRpb25pbmcYBCABKAsyPy5lZ
  HUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5BZGRQYXJ0aXRpb25pbmdWMkIU4j8REg9hZGRQYXJ0a
  XRpb25pbmdIAFIPYWRkUGFydGl0aW9uaW5nEo8BChR1cGRhdGVfaW5wdXRfbGlua2luZxgFIAEoCzJCLmVkdS51Y2kuaWNzLmFtY
  mVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlVwZGF0ZUlucHV0TGlua2luZ1YyQhfiPxQSEnVwZGF0ZUlucHV0TGlua2luZ
  0gAUhJ1cGRhdGVJbnB1dExpbmtpbmcSggEKEHF1ZXJ5X3N0YXRpc3RpY3MYBiABKAsyPy5lZHUudWNpLmljcy5hbWJlci5lbmdpb
  mUuYXJjaGl0ZWN0dXJlLndvcmtlci5RdWVyeVN0YXRpc3RpY3NWMkIU4j8REg9xdWVyeVN0YXRpc3RpY3NIAFIPcXVlcnlTdGF0a
  XN0aWNzEqABChlxdWVyeV9jdXJyZW50X2lucHV0X3R1cGxlGAcgASgLMkYuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpd
  GVjdHVyZS53b3JrZXIuUXVlcnlDdXJyZW50SW5wdXRUdXBsZVYyQhviPxgSFnF1ZXJ5Q3VycmVudElucHV0VHVwbGVIAFIWcXVlc
  nlDdXJyZW50SW5wdXRUdXBsZRKfAQoYbG9jYWxfb3BlcmF0b3JfZXhjZXB0aW9uGAggASgLMkYuZWR1LnVjaS5pY3MuYW1iZXIuZ
  W5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuTG9jYWxPcGVyYXRvckV4Y2VwdGlvblYyQhviPxgSFmxvY2FsT3BlcmF0b3JFeGNlc
  HRpb25IAFIWbG9jYWxPcGVyYXRvckV4Y2VwdGlvbhJ2Cg1vcGVuX29wZXJhdG9yGAkgASgLMjwuZWR1LnVjaS5pY3MuYW1iZXIuZ
  W5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuT3Blbk9wZXJhdG9yVjJCEeI/DhIMb3Blbk9wZXJhdG9ySABSDG9wZW5PcGVyYXRvc
  hJ6Cg5saW5rX2NvbXBsZXRlZBgKIAEoCzI9LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkxpb
  mtDb21wbGV0ZWRWMkIS4j8PEg1saW5rQ29tcGxldGVkSABSDWxpbmtDb21wbGV0ZWQSoAEKGXNjaGVkdWxlcl90aW1lX3Nsb3RfZ
  XZlbnQYCyABKAsyRi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5TY2hlZHVsZXJUaW1lU2xvd
  EV2ZW50VjJCG+I/GBIWc2NoZWR1bGVyVGltZVNsb3RFdmVudEgAUhZzY2hlZHVsZXJUaW1lU2xvdEV2ZW50EqMBChlpbml0aWFsa
  XplX29wZXJhdG9yX2xvZ2ljGBUgASgLMkcuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuSW5pd
  GlhbGl6ZU9wZXJhdG9yTG9naWNWMkIc4j8ZEhdpbml0aWFsaXplT3BlcmF0b3JMb2dpY0gAUhdpbml0aWFsaXplT3BlcmF0b3JMb
  2dpYxKTAQoVbW9kaWZ5X29wZXJhdG9yX2xvZ2ljGBYgASgLMkMuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZ
  S53b3JrZXIuTW9kaWZ5T3BlcmF0b3JMb2dpY1YyQhjiPxUSE21vZGlmeU9wZXJhdG9yTG9naWNIAFITbW9kaWZ5T3BlcmF0b3JMb
  2dpYxKXAQoWcHl0aG9uX2NvbnNvbGVfbWVzc2FnZRgXIAEoCzJELmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1c
  mUud29ya2VyLlB5dGhvbkNvbnNvbGVNZXNzYWdlVjJCGeI/FhIUcHl0aG9uQ29uc29sZU1lc3NhZ2VIAFIUcHl0aG9uQ29uc29sZ
  U1lc3NhZ2USjwEKFHJlcGxheV9jdXJyZW50X3R1cGxlGBggASgLMkIuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjd
  HVyZS53b3JrZXIuUmVwbGF5Q3VycmVudFR1cGxlVjJCF+I/FBIScmVwbGF5Q3VycmVudFR1cGxlSABSEnJlcGxheUN1cnJlbnRUd
  XBsZRKOAQoTZXZhbHVhdGVfZXhwcmVzc2lvbhgZIAEoCzJCLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud
  29ya2VyLkV2YWx1YXRlRXhwcmVzc2lvblYyQhfiPxQSEmV2YWx1YXRlRXhwcmVzc2lvbkgAUhJldmFsdWF0ZUV4cHJlc3Npb24Sq
  AEKG3F1ZXJ5X3NlbGZfd29ya2xvYWRfbWV0cmljcxgpIAEoCzJILmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1c
  mUud29ya2VyLlF1ZXJ5U2VsZldvcmtsb2FkTWV0cmljc1YyQh3iPxoSGHF1ZXJ5U2VsZldvcmtsb2FkTWV0cmljc0gAUhhxdWVye
  VNlbGZXb3JrbG9hZE1ldHJpY3MSjwEKFHdvcmtlcl9kZWJ1Z19jb21tYW5kGFEgASgLMkIuZWR1LnVjaS5pY3MuYW1iZXIuZW5na
  W5lLmFyY2hpdGVjdHVyZS53b3JrZXIuV29ya2VyRGVidWdDb21tYW5kVjJCF+I/FBISd29ya2VyRGVidWdDb21tYW5kSABSEndvc
  mtlckRlYnVnQ29tbWFuZBJ2Cg1zdGF0ZV9yZXF1ZXN0GFIgASgLMjwuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjd
  HVyZS53b3JrZXIuU3RhdGVSZXF1ZXN0VjJCEeI/DhIMc3RhdGVSZXF1ZXN0SABSDHN0YXRlUmVxdWVzdBKnAQoad29ya2VyX2V4Z
  WN1dGlvbl9jb21wbGV0ZWQYZSABKAsySC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Xb3JrZ
  XJFeGVjdXRpb25Db21wbGV0ZWRWMkId4j8aEhh3b3JrZXJFeGVjdXRpb25Db21wbGV0ZWRIAFIYd29ya2VyRXhlY3V0aW9uQ29tc
  GxldGVkQg4KDHNlYWxlZF92YWx1ZUIJ4j8GSABYAHgBYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}