// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.worker.controlcommands

object ControlcommandsProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto,
    edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto,
    com.google.protobuf.timestamp.TimestampProto,
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.StartWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PauseWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ResumeWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.SchedulerTimeSlotEventV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.OpenOperatorV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.UpdateInputLinkingV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AddPartitioningV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerExecutionCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryStatisticsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryCurrentInputTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LocalOperatorExceptionV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LinkOrdinal,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.InitializeOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ModifyOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ReplayCurrentTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PythonConsoleMessageV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.EvaluateExpressionV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerDebugCommandV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.StateRequestV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QuerySelfWorkloadMetricsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LinkCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ControlCommandV2Message
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CkJlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0ZWN0dXJlL3dvcmtlci9jb250cm9sY29tbWFuZHMucHJvdG8SLGVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyGkdlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0Z
  WN0dXJlL3NlbmRzZW1hbnRpY3MvcGFydGl0aW9uaW5ncy5wcm90bxo1ZWR1L3VjaS9pY3MvYW1iZXIvZW5naW5lL2NvbW1vbi92a
  XJ0dWFsaWRlbnRpdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aFXNjYWxhcGIvc2NhbGFwYi5wcm90b
  yIPCg1TdGFydFdvcmtlclYyIg8KDVBhdXNlV29ya2VyVjIiEAoOUmVzdW1lV29ya2VyVjIiXAoYU2NoZWR1bGVyVGltZVNsb3RFd
  mVudFYyEkAKEXRpbWVfc2xvdF9leHBpcmVkGAEgASgIQhTiPxESD3RpbWVTbG90RXhwaXJlZFIPdGltZVNsb3RFeHBpcmVkIhAKD
  k9wZW5PcGVyYXRvclYyIuIBChRVcGRhdGVJbnB1dExpbmtpbmdWMhJpCgppZGVudGlmaWVyGAEgASgLMjUuZWR1LnVjaS5pY3MuY
  W1iZXIuZW5naW5lLmNvbW1vbi5BY3RvclZpcnR1YWxJZGVudGl0eUIS4j8PEgppZGVudGlmaWVy8AEBUgppZGVudGlmaWVyEl8KC
  mlucHV0X2xpbmsYAiABKAsyLS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLkxpbmtJZGVudGl0eUIR4j8OEglpbnB1d
  ExpbmvwAQFSCWlucHV0TGluayLeAQoRQWRkUGFydGl0aW9uaW5nVjISTAoDdGFnGAEgASgLMi0uZWR1LnVjaS5pY3MuYW1iZXIuZ
  W5naW5lLmNvbW1vbi5MaW5rSWRlbnRpdHlCC+I/CBIDdGFn8AEBUgN0YWcSewoMcGFydGl0aW9uaW5nGAIgASgLMkEuZWR1LnVja
  S5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5zZW5kc2VtYW50aWNzLlBhcnRpdGlvbmluZ0IU4j8REgxwYXJ0aXRpb25pb
  mfwAQFSDHBhcnRpdGlvbmluZyIcChpXb3JrZXJFeGVjdXRpb25Db21wbGV0ZWRWMiITChFRdWVyeVN0YXRpc3RpY3NWMiIaChhRd
  WVyeUN1cnJlbnRJbnB1dFR1cGxlVjIiQgoYTG9jYWxPcGVyYXRvckV4Y2VwdGlvblYyEiYKB21lc3NhZ2UYASABKAlCDOI/CRIHb
  WVzc2FnZVIHbWVzc2FnZSKaAQoLTGlua09yZGluYWwSVgoHbGlua19pZBgBIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5jb21tb24uTGlua0lkZW50aXR5Qg7iPwsSBmxpbmtJZPABAVIGbGlua0lkEjMKDHBvcnRfb3JkaW5hbBgCIAEoA0IQ4j8NEgtwb
  3J0T3JkaW5hbFILcG9ydE9yZGluYWwi6AQKGUluaXRpYWxpemVPcGVyYXRvckxvZ2ljVjISHQoEY29kZRgBIAEoCUIJ4j8GEgRjb
  2RlUgRjb2RlEioKCWlzX3NvdXJjZRgCIAEoCEIN4j8KEghpc1NvdXJjZVIIaXNTb3VyY2UShwEKFWlucHV0X29yZGluYWxfbWFwc
  GluZxgDIAMoCzI5LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkxpbmtPcmRpbmFsQhjiPxUSE
  2lucHV0T3JkaW5hbE1hcHBpbmdSE2lucHV0T3JkaW5hbE1hcHBpbmcSigEKFm91dHB1dF9vcmRpbmFsX21hcHBpbmcYBCADKAsyO
  S5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5MaW5rT3JkaW5hbEIZ4j8WEhRvdXRwdXRPcmRpb
  mFsTWFwcGluZ1IUb3V0cHV0T3JkaW5hbE1hcHBpbmcSkQEKDW91dHB1dF9zY2hlbWEYBSADKAsyWS5lZHUudWNpLmljcy5hbWJlc
  i5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Jbml0aWFsaXplT3BlcmF0b3JMb2dpY1YyLk91dHB1dFNjaGVtYUVudHJ5QhHiP
  w4SDG91dHB1dFNjaGVtYVIMb3V0cHV0U2NoZW1hGlUKEU91dHB1dFNjaGVtYUVudHJ5EhoKA2tleRgBIAEoCUII4j8FEgNrZXlSA
  2tleRIgCgV2YWx1ZRgCIAEoCUIK4j8HEgV2YWx1ZVIFdmFsdWU6AjgBImIKFU1vZGlmeU9wZXJhdG9yTG9naWNWMhIdCgRjb2RlG
  AEgASgJQgniPwYSBGNvZGVSBGNvZGUSKgoJaXNfc291cmNlGAIgASgIQg3iPwoSCGlzU291cmNlUghpc1NvdXJjZSIWChRSZXBsY
  XlDdXJyZW50VHVwbGVWMiLbAQoWUHl0aG9uQ29uc29sZU1lc3NhZ2VWMhJLCgl0aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJvd
  G9idWYuVGltZXN0YW1wQhHiPw4SCXRpbWVzdGFtcPABAVIJdGltZXN0YW1wEicKCG1zZ190eXBlGAIgASgJQgziPwkSB21zZ1R5c
  GVSB21zZ1R5cGUSIwoGc291cmNlGAMgASgJQgviPwgSBnNvdXJjZVIGc291cmNlEiYKB21lc3NhZ2UYBCABKAlCDOI/CRIHbWVzc
  2FnZVIHbWVzc2FnZSJHChRFdmFsdWF0ZUV4cHJlc3Npb25WMhIvCgpleHByZXNzaW9uGAEgASgJQg/iPwwSCmV4cHJlc3Npb25SC
  mV4cHJlc3Npb24iMgoUV29ya2VyRGVidWdDb21tYW5kVjISGgoDY21kGAEgASgJQgjiPwUSA2NtZFIDY21kIo4BCg5TdGF0ZVJlc
  XVlc3RWMhInCgh0dXBsZV9pZBgBIAEoCUIM4j8JEgd0dXBsZUlkUgd0dXBsZUlkEiQKB2xpbmVfbm8YAiABKAVCC+I/CBIGbGluZ
  U5vUgZsaW5lTm8SLQoKc3RhdGVfbmFtZRgDIAEoCUIO4j8LEglzdGF0ZU5hbWVSCXN0YXRlTmFtZSIcChpRdWVyeVNlbGZXb3Jrb
  G9hZE1ldHJpY3NWMiJpCg9MaW5rQ29tcGxldGVkVjISVgoHbGlua19pZBgBIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5jb21tb24uTGlua0lkZW50aXR5Qg7iPwsSBmxpbmtJZPABAVIGbGlua0lkItIWChBDb250cm9sQ29tbWFuZFYyEnIKDHN0YXJ0X
  3dvcmtlchgBIAEoCzI7LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlN0YXJ0V29ya2VyVjJCE
  OI/DRILc3RhcnRXb3JrZXJIAFILc3RhcnRXb3JrZXIScgoMcGF1c2Vfd29ya2VyGAIgASgLMjsuZWR1LnVjaS5pY3MuYW1iZXIuZ
  W5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUGF1c2VXb3JrZXJWMkIQ4j8NEgtwYXVzZVdvcmtlckgAUgtwYXVzZVdvcmtlchJ2C
  g1yZXN1bWVfd29ya2VyGAMgASgLMjwuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUmVzdW1lV
  29ya2VyVjJCEeI/DhIMcmVzdW1lV29ya2VySABSDHJlc3VtZVdvcmtlchKCAQoQYWRkX3BhcnRpdGlvbmluZxgEIAEoCzI/LmVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkFkZFBhcnRpdGlvbmluZ1YyQhTiPxESD2FkZFBhcnRpd
  GlvbmluZ0gAUg9hZGRQYXJ0aXRpb25pbmcSjwEKFHVwZGF0ZV9pbnB1dF9saW5raW5nGAUgASgLMkIuZWR1LnVjaS5pY3MuYW1iZ
  XIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuVXBkYXRlSW5wdXRMaW5raW5nVjJCF+I/FBISdXBkYXRlSW5wdXRMaW5raW5nS
  ABSEnVwZGF0ZUlucHV0TGlua2luZxKCAQoQcXVlcnlfc3RhdGlzdGljcxgGIAEoCzI/LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5hcmNoaXRlY3R1cmUud29ya2VyLlF1ZXJ5U3RhdGlzdGljc1YyQhTiPxESD3F1ZXJ5U3RhdGlzdGljc0gAUg9xdWVyeVN0YXRpc
  3RpY3MSoAEKGXF1ZXJ5X2N1cnJlbnRfaW5wdXRfdHVwbGUYByABKAsyRi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0Z
  WN0dXJlLndvcmtlci5RdWVyeUN1cnJlbnRJbnB1dFR1cGxlVjJCG+I/GBIWcXVlcnlDdXJyZW50SW5wdXRUdXBsZUgAUhZxdWVye
  UN1cnJlbnRJbnB1dFR1cGxlEp8BChhsb2NhbF9vcGVyYXRvcl9leGNlcHRpb24YCCABKAsyRi5lZHUudWNpLmljcy5hbWJlci5lb
  mdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Mb2NhbE9wZXJhdG9yRXhjZXB0aW9uVjJCG+I/GBIWbG9jYWxPcGVyYXRvckV4Y2Vwd
  GlvbkgAUhZsb2NhbE9wZXJhdG9yRXhjZXB0aW9uEnYKDW9wZW5fb3BlcmF0b3IYCSABKAsyPC5lZHUudWNpLmljcy5hbWJlci5lb
  mdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5PcGVuT3BlcmF0b3JWMkIR4j8OEgxvcGVuT3BlcmF0b3JIAFIMb3Blbk9wZXJhdG9yE
  noKDmxpbmtfY29tcGxldGVkGAogASgLMj0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuTGlua
  0NvbXBsZXRlZFYyQhLiPw8SDWxpbmtDb21wbGV0ZWRIAFINbGlua0NvbXBsZXRlZBKgAQoZc2NoZWR1bGVyX3RpbWVfc2xvdF9ld
  mVudBgLIAEoCzJGLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlNjaGVkdWxlclRpbWVTbG90R
  XZlbnRWMkIb4j8YEhZzY2hlZHVsZXJUaW1lU2xvdEV2ZW50SABSFnNjaGVkdWxlclRpbWVTbG90RXZlbnQSowEKGWluaXRpYWxpe
  mVfb3BlcmF0b3JfbG9naWMYFSABKAsyRy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Jbml0a
  WFsaXplT3BlcmF0b3JMb2dpY1YyQhziPxkSF2luaXRpYWxpemVPcGVyYXRvckxvZ2ljSABSF2luaXRpYWxpemVPcGVyYXRvckxvZ
  2ljEpMBChVtb2RpZnlfb3BlcmF0b3JfbG9naWMYFiABKAsyQy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlL
  ndvcmtlci5Nb2RpZnlPcGVyYXRvckxvZ2ljVjJCGOI/FRITbW9kaWZ5T3BlcmF0b3JMb2dpY0gAUhNtb2RpZnlPcGVyYXRvckxvZ
  2ljEpcBChZweXRob25fY29uc29sZV9tZXNzYWdlGBcgASgLMkQuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZ
  S53b3JrZXIuUHl0aG9uQ29uc29sZU1lc3NhZ2VWMkIZ4j8WEhRweXRob25Db25zb2xlTWVzc2FnZUgAUhRweXRob25Db25zb2xlT
  WVzc2FnZRKPAQoUcmVwbGF5X2N1cnJlbnRfdHVwbGUYGCABKAsyQi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0d
  XJlLndvcmtlci5SZXBsYXlDdXJyZW50VHVwbGVWMkIX4j8UEhJyZXBsYXlDdXJyZW50VHVwbGVIAFIScmVwbGF5Q3VycmVudFR1c
  GxlEo4BChNldmFsdWF0ZV9leHByZXNzaW9uGBkgASgLMkIuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b
  3JrZXIuRXZhbHVhdGVFeHByZXNzaW9uVjJCF+I/FBISZXZhbHVhdGVFeHByZXNzaW9uSABSEmV2YWx1YXRlRXhwcmVzc2lvbhKoA
  QobcXVlcnlfc2VsZl93b3JrbG9hZF9tZXRyaWNzGCkgASgLMkguZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZ
  S53b3JrZXIuUXVlcnlTZWxmV29ya2xvYWRNZXRyaWNzVjJCHeI/GhIYcXVlcnlTZWxmV29ya2xvYWRNZXRyaWNzSABSGHF1ZXJ5U
  2VsZldvcmtsb2FkTWV0cmljcxKPAQoUd29ya2VyX2RlYnVnX2NvbW1hbmQYUSABKAsyQi5lZHUudWNpLmljcy5hbWJlci5lbmdpb
  mUuYXJjaGl0ZWN0dXJlLndvcmtlci5Xb3JrZXJEZWJ1Z0NvbW1hbmRWMkIX4j8UEhJ3b3JrZXJEZWJ1Z0NvbW1hbmRIAFISd29ya
  2VyRGVidWdDb21tYW5kEnYKDXN0YXRlX3JlcXVlc3QYUiABKAsyPC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0d
  XJlLndvcmtlci5TdGF0ZVJlcXVlc3RWMkIR4j8OEgxzdGF0ZVJlcXVlc3RIAFIMc3RhdGVSZXF1ZXN0EqcBChp3b3JrZXJfZXhlY
  3V0aW9uX2NvbXBsZXRlZBhlIAEoCzJILmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLldvcmtlc
  kV4ZWN1dGlvbkNvbXBsZXRlZFYyQh3iPxoSGHdvcmtlckV4ZWN1dGlvbkNvbXBsZXRlZEgAUhh3b3JrZXJFeGVjdXRpb25Db21wb
  GV0ZWRCDgoMc2VhbGVkX3ZhbHVlQgniPwZIAFgAeAFiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}